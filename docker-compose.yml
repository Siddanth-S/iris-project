version: '3.1'
services:
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: myapp_development
      MYSQL_USER: myapp
      MYSQL_PASSWORD: password
    # ports: #not exposing outside the docker network (iris-systems-recruitment-2024_default)
    #   - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

  web1:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # ports: #removed the port mapping because using nginx for reverse-proxy
    #   - "8080:3000"
    depends_on:
      - db
    volumes:
      - .:/app
      - ./tmp_web1:/app/tmp
      - ./storage:/app/storage
    environment:
      RAILS_ENV: development
      NODE_ENV: development
      DATABASE_URL: "mysql2://myapp:password@db/myapp_development"

  web2:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    depends_on:
      - db
    volumes:
      - .:/app
      - ./tmp_web2:/app/tmp
      - ./storage:/app/storage
    environment:
      RAILS_ENV: development
      NODE_ENV: development
      DATABASE_URL: "mysql2://myapp:password@db/myapp_development"

  web3:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    depends_on:
      - db
    volumes:
      - .:/app
      - ./tmp_web3:/app/tmp
      - ./storage:/app/storage
    environment:
      RAILS_ENV: development
      NODE_ENV: development
      DATABASE_URL: "mysql2://myapp:password@db/myapp_development"

  
  nginx:
    image: nginx
    ports:
      - "8080:80"  # Expose Nginx at port 8080 on the host
    depends_on:
      - web1
      - web2
      - web3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # Ensure Nginx restarts if the configuration or service changes
    command: ["/bin/sh", "-c", "nginx -g 'daemon off;'"]

volumes:
  db_data:



     

